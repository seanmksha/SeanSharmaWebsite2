/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "@angular/core";
import * as i1 from "../projects-sidebar.component.ngfactory";
import * as i2 from "../projects-sidebar.component";
import * as i3 from "@angular/router";
import * as i4 from "@angular/common";
import * as i5 from "../../MainSections/Footer.component.ngfactory";
import * as i6 from "../../MainSections/Footer.component";
import * as i7 from "./ImageCompressor.component";
var styles_ImageCompressorComponent = [];
var RenderType_ImageCompressorComponent = i0.ɵcrt({ encapsulation: 2, styles: styles_ImageCompressorComponent, data: {} });
export { RenderType_ImageCompressorComponent as RenderType_ImageCompressorComponent };
export function View_ImageCompressorComponent_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 41, "div", [["class", "row"]], null, null, null, null, null)), (_l()(), i0.ɵeld(1, 0, null, null, 2, "div", [["class", "d-none d-lg-block col-lg-2"]], null, null, null, null, null)), (_l()(), i0.ɵeld(2, 0, null, null, 1, "projects-sidebar", [], null, null, null, i1.View_ProjectsSidebarComponent_0, i1.RenderType_ProjectsSidebarComponent)), i0.ɵdid(3, 49152, null, 0, i2.ProjectsSidebarComponent, [], null, null), (_l()(), i0.ɵeld(4, 0, null, null, 0, "div", [["class", "d-none d-lg-block col-lg-1"]], null, null, null, null, null)), (_l()(), i0.ɵeld(5, 0, null, null, 36, "div", [["class", "col-md-12 col-lg-8"]], null, null, null, null, null)), (_l()(), i0.ɵeld(6, 0, null, null, 35, "div", [["class", "mainContainer"]], null, null, null, null, null)), (_l()(), i0.ɵeld(7, 0, null, null, 3, "a", [], [[1, "target", 0], [8, "href", 4]], [[null, "click"]], function (_v, en, $event) { var ad = true; if (("click" === en)) {
        var pd_0 = (i0.ɵnov(_v, 8).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), i0.ɵdid(8, 671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, "routerLink"] }, null), i0.ɵpad(9, 1), (_l()(), i0.ɵted(-1, null, ["Home"])), (_l()(), i0.ɵted(-1, null, [" >> "])), (_l()(), i0.ɵeld(12, 0, null, null, 3, "a", [], [[1, "target", 0], [8, "href", 4]], [[null, "click"]], function (_v, en, $event) { var ad = true; if (("click" === en)) {
        var pd_0 = (i0.ɵnov(_v, 13).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), i0.ɵdid(13, 671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, "routerLink"] }, null), i0.ɵpad(14, 1), (_l()(), i0.ɵted(-1, null, ["Projects"])), (_l()(), i0.ɵted(-1, null, [" >> "])), (_l()(), i0.ɵeld(17, 0, null, null, 3, "a", [], [[1, "target", 0], [8, "href", 4]], [[null, "click"]], function (_v, en, $event) { var ad = true; if (("click" === en)) {
        var pd_0 = (i0.ɵnov(_v, 18).onClick($event.button, $event.ctrlKey, $event.metaKey, $event.shiftKey) !== false);
        ad = (pd_0 && ad);
    } return ad; }, null, null)), i0.ɵdid(18, 671744, null, 0, i3.RouterLinkWithHref, [i3.Router, i3.ActivatedRoute, i4.LocationStrategy], { routerLink: [0, "routerLink"] }, null), i0.ɵpad(19, 1), (_l()(), i0.ɵted(20, null, ["", ""])), (_l()(), i0.ɵeld(21, 0, null, null, 0, "br", [], null, null, null, null, null)), (_l()(), i0.ɵeld(22, 0, null, null, 1, "h1", [], null, null, null, null, null)), (_l()(), i0.ɵted(23, null, ["", ""])), (_l()(), i0.ɵeld(24, 0, null, null, 0, "br", [], null, null, null, null, null)), (_l()(), i0.ɵeld(25, 0, null, null, 1, "div", [["class", "headerContainer"]], null, null, null, null, null)), (_l()(), i0.ɵeld(26, 0, null, null, 0, "img", [["class", "width500"]], [[8, "src", 4]], null, null, null, null)), (_l()(), i0.ɵeld(27, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, ["The program takes uncompressed RGB files. Performs a Discrete Cosine Transform similar to how JPEG Compression uses it on 8x8 sub-blocks. "])), (_l()(), i0.ɵeld(29, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, ["Performs a Discrete Wavelet Transform on the entire images used in JPEG2000 achieving better compression than the original JPEG compression. Shows results side by side through different quality inputs. "])), (_l()(), i0.ɵeld(31, 0, null, null, 1, "b", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, ["Encoding"])), (_l()(), i0.ɵeld(33, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [" For the DCT conversion, it breaks up the image into 8x8 contiguous blocks or 64 pixels each and then perform a DCT for each block for each channel. For the DWT conversion, it converts each row (for each channel) into low pass and high pass coefficients followed by the same for each column applied to the output of the row processing. It recurses on the same row then column sequence on the remaining low pass coefficients until the end. "])), (_l()(), i0.ɵeld(35, 0, null, null, 1, "b", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, ["Decoding"])), (_l()(), i0.ɵeld(37, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [" Based on the input parameter of the number of coefficients to use, the program appropriately decodes by zeroing out the unrequested coefficients (just setting the coefficients to zero) and then perform an IDCT or an IDWT. The exact coefficients to zero out are different for both cases and are explained next. "])), (_l()(), i0.ɵeld(39, 0, null, null, 1, "p", [], null, null, null, null, null)), (_l()(), i0.ɵted(-1, null, [" For a DCT, the program selects the first m coefficients in a zig order for each 8x8 block such that m = round(n/4096) where n is the number of coefficients given as input. 4096 is the number of 8x8 blocks in a 512x512 image. Thus, m represents the first few coefficients to use for each 8x8 block during decoding. For example for n=131072, the program will use m = round(131072/4096) = 32. Each block will be decoded using the first 32 coefficients in zigzag order. The remaining can be set to zero prior to decoding. For the third test run above (n=16384), the program will use m = round (16384/4096) = 4. For a DWT, the program selects the first n coefficients in a zig zag order for the image where n is the number of coefficients given as input. DWT encodes the entire image so, here it will use the first n coefficients in zig zag order."])), (_l()(), i0.ɵeld(41, 0, null, null, 0, "div", [["class", "divide10"]], null, null, null, null, null)), (_l()(), i0.ɵeld(42, 0, null, null, 1, "Footer", [], null, null, null, i5.View_FooterComponent_0, i5.RenderType_FooterComponent)), i0.ɵdid(43, 49152, null, 0, i6.FooterComponent, [], null, null)], function (_ck, _v) { var currVal_2 = _ck(_v, 9, 0, "/"); _ck(_v, 8, 0, currVal_2); var currVal_5 = _ck(_v, 14, 0, "/Projects"); _ck(_v, 13, 0, currVal_5); var currVal_8 = _ck(_v, 19, 0, "/Projects/Image-Compressor"); _ck(_v, 18, 0, currVal_8); }, function (_ck, _v) { var _co = _v.component; var currVal_0 = i0.ɵnov(_v, 8).target; var currVal_1 = i0.ɵnov(_v, 8).href; _ck(_v, 7, 0, currVal_0, currVal_1); var currVal_3 = i0.ɵnov(_v, 13).target; var currVal_4 = i0.ɵnov(_v, 13).href; _ck(_v, 12, 0, currVal_3, currVal_4); var currVal_6 = i0.ɵnov(_v, 18).target; var currVal_7 = i0.ɵnov(_v, 18).href; _ck(_v, 17, 0, currVal_6, currVal_7); var currVal_9 = _co.header; _ck(_v, 20, 0, currVal_9); var currVal_10 = _co.header; _ck(_v, 23, 0, currVal_10); var currVal_11 = i0.ɵinlineInterpolate(1, "", _co.images[1], ""); _ck(_v, 26, 0, currVal_11); }); }
export function View_ImageCompressorComponent_Host_0(_l) { return i0.ɵvid(0, [(_l()(), i0.ɵeld(0, 0, null, null, 1, "imagecompressor", [], null, null, null, View_ImageCompressorComponent_0, RenderType_ImageCompressorComponent)), i0.ɵdid(1, 49152, null, 0, i7.ImageCompressorComponent, [], null, null)], null, null); }
var ImageCompressorComponentNgFactory = i0.ɵccf("imagecompressor", i7.ImageCompressorComponent, View_ImageCompressorComponent_Host_0, {}, {}, []);
export { ImageCompressorComponentNgFactory as ImageCompressorComponentNgFactory };
